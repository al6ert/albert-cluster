name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # 1) Lint de Helm Charts
  helm-lint:
    name: Helm lint & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v3

      # Lint de todos tus charts (cuando existan en infra/charts)
      # - name: Helm lint custom charts
      #   run: helm lint infra/charts

      # (Opcional) Instalar y lanzar helm-unittest
      # - name: Install helm-unittest plugin
      #   run: helm plugin install https://github.com/quintush/helm-unittest
      # - name: Run unit tests
      #   run: helm unittest infra/charts/**

  # 2) Build & push de imágenes Docker
  build-and-push:
    name: Build & Push Docker images
    runs-on: ubuntu-latest
    needs: helm-lint
    steps:
      - uses: actions/checkout@v4

      # Login a tu registry (GHCR en este ejemplo)
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


  # 3) Diff de Helm contra Netcup (usa kubeconfig de Netcup)
  helm-diff:
    name: Helm Diff (Netcup preview)
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3

      # Configurar kubeconfig desde tu secret NETCUP_KUBECONFIG_RO
      - name: Setup kubeconfig for Netcup
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.NETCUP_KUBECONFIG_RO }}" > ~/.kube/config
          chmod 600 ~/.kube/config
        env:
          KUBECONFIG: ${{ github.workspace }}/.kube/config

      # Verificar conexión y validar CRDs
      - name: Verify kubectl connectivity
        run: kubectl get nodes

      # Validar CRDs antes del diff
      - name: Validate CRDs
        run: |
          kubectl apply --dry-run=client -f infra/bootstrap/crds/
          echo "✅ CRDs validation passed"

      # Instalar Helmfile
      - name: Install Helmfile
        run: |
          curl -L https://github.com/helmfile/helmfile/releases/latest/download/helmfile_linux_amd64 > /usr/local/bin/helmfile
          chmod +x /usr/local/bin/helmfile

      # Añadir repositorios Helm (Helmfile los maneja automáticamente, pero por si acaso)
      - name: Add Helm repos
        run: |
          helm repo add traefik https://traefik.github.io/charts
          helm repo update

      # Validar templates de Helmfile
      - name: Validate Helmfile templates
        run: |
          cd infra/apps
          helmfile template --environment netcup | kubectl apply --dry-run=client -f -
          echo "✅ Helmfile templates validation passed"

      # Diff usando Helmfile para consistencia con la configuración local
      - name: Helmfile diff
        run: |
          cd infra/apps
          helmfile diff --environment netcup --detailed-exitcode

   
