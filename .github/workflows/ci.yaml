name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  validate_and_publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.3

      - name: Install curl, Helmfile and yq
        run: |
          apt-get update && apt-get install -y curl
          curl -L https://github.com/helmfile/helmfile/releases/download/v0.162.0/helmfile_0.162.0_linux_amd64.tar.gz | tar xz
          mv helmfile /usr/local/bin/
          chmod +x /usr/local/bin/helmfile
          
          # Install yq for YAML processing
          curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Render manifests for netcup
        run: |
          echo "Rendering netcup manifests..."
          cd infra/apps
          mkdir -p ../rendered/netcup
          helmfile --environment netcup template > ../rendered/netcup/all.yaml
          echo "✅ Netcup manifests rendered successfully"

      - name: Validate YAML syntax for netcup
        run: |
          echo "Validating YAML syntax for netcup..."
          python3 -c "import yaml; list(yaml.safe_load_all(open('infra/rendered/netcup/all.yaml'))); print('✅ Netcup YAML syntax is valid')"
          echo "✅ YAML validation passed for netcup"

      - name: Compare middlewares between environments
        run: |
          echo "Comparing middlewares between minikube and netcup..."
          yq '.middlewares' infra/envs/minikube/traefik-values.yaml > /tmp/minikube_mw
          yq '.middlewares' infra/envs/netcup/traefik-values.yaml > /tmp/netcup_mw
          if ! diff -u /tmp/minikube_mw /tmp/netcup_mw; then
            echo "❌ Middlewares don't match between environments"
            exit 1
          fi
          echo "✅ Middlewares are consistent between environments"

      - name: Compare namespaces between environments
        run: |
          echo "Comparing namespaces between minikube and netcup..."
          cd infra/apps
          
          # Render both environments to temp files
          helmfile --environment minikube template > /tmp/minikube-all.yaml
          helmfile --environment netcup template > /tmp/netcup-all.yaml
          
          # Extract and compare namespaces
          minikube_ns=$(yq e '.metadata.namespace' /tmp/minikube-all.yaml | sort -u | grep -v null)
          netcup_ns=$(yq e '.metadata.namespace' /tmp/netcup-all.yaml | sort -u | grep -v null)
          
          echo "Minikube namespaces: $minikube_ns"
          echo "Netcup namespaces: $netcup_ns"
          
          if [ "$minikube_ns" != "$netcup_ns" ]; then
            echo "❌ Namespaces don't match between environments"
            exit 1
          fi
          echo "✅ Namespaces are consistent between environments"

      - name: Commit rendered manifests
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f infra/rendered/netcup
          git commit -m "ci: render netcup manifests $(date +%F-%T)" || echo "No changes to commit"
          git push

  validate_only:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.3

      - name: Install curl, Helmfile and yq
        run: |
          apt-get update && apt-get install -y curl
          curl -L https://github.com/helmfile/helmfile/releases/download/v0.162.0/helmfile_0.162.0_linux_amd64.tar.gz | tar xz
          mv helmfile /usr/local/bin/
          chmod +x /usr/local/bin/helmfile
          
          # Install yq for YAML processing
          curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Render manifests for netcup
        run: |
          echo "Rendering netcup manifests for validation..."
          cd infra/apps
          mkdir -p ../rendered/netcup
          helmfile --environment netcup template > ../rendered/netcup/all.yaml
          echo "✅ Netcup manifests rendered successfully"

      - name: Validate YAML syntax for netcup
        run: |
          echo "Validating YAML syntax for netcup..."
          python3 -c "import yaml; list(yaml.safe_load_all(open('infra/rendered/netcup/all.yaml'))); print('✅ Netcup YAML syntax is valid')"
          echo "✅ YAML validation passed for netcup"

      - name: Compare middlewares between environments
        run: |
          echo "Comparing middlewares between minikube and netcup..."
          yq '.middlewares' infra/envs/minikube/traefik-values.yaml > /tmp/minikube_mw
          yq '.middlewares' infra/envs/netcup/traefik-values.yaml > /tmp/netcup_mw
          if ! diff -u /tmp/minikube_mw /tmp/netcup_mw; then
            echo "❌ Middlewares don't match between environments"
            exit 1
          fi
          echo "✅ Middlewares are consistent between environments"

      - name: Compare namespaces between environments
        run: |
          echo "Comparing namespaces between minikube and netcup..."
          cd infra/apps
          
          # Render both environments to temp files
          helmfile --environment minikube template > /tmp/minikube-all.yaml
          helmfile --environment netcup template > /tmp/netcup-all.yaml
          
          # Extract and compare namespaces
          minikube_ns=$(yq e '.metadata.namespace' /tmp/minikube-all.yaml | sort -u | grep -v null)
          netcup_ns=$(yq e '.metadata.namespace' /tmp/netcup-all.yaml | sort -u | grep -v null)
          
          echo "Minikube namespaces: $minikube_ns"
          echo "Netcup namespaces: $netcup_ns"
          
          if [ "$minikube_ns" != "$netcup_ns" ]; then
            echo "❌ Namespaces don't match between environments"
            exit 1
          fi
          echo "✅ Namespaces are consistent between environments"
